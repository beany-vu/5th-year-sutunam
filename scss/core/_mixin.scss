/* transition */
@mixin stn_transition($time:0.2s) {
  -webkit-transition: all $time ease;
  -moz-transition: all $time ease;
  -o-transition: all $time ease;
  transition: all $time ease;
}

/* placeholder */
@mixin stn_placeholder_color($color:#fff) {
  &::-webkit-input-placeholder {
    color: $color;
  }
  &:-moz-placeholder { /* Firefox 18- */
    color: $color;
  }
  &::-moz-placeholder { /* Firefox 19+ */
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
}

/* border radius */
@mixin border-radius($radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

/* box-shadow */
@mixin box-shadow($value) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  box-shadow: $value;
}

/* transform */
@mixin transform($transforms) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  transform: $transforms;
}

/* breakpoint with one condition(min or max) */
$mq-support: true !default;
@mixin bp($feature, $value) {
  // Set global device param
  $media: only screen;

  // Media queries supported
  @if $mq-support == true {

    @media #{$media} and ($feature: $value) {
      @content;
    }

    // Media queries not supported
  } @else {

    @if $feature == 'min-width' {
      @if $value <= $mq-fixed-value {
        @content;
      }
    } @else if $feature == 'max-width' {
      @if $value >= $mq-fixed-value {
        @content;
      }
    }

  }
}

/* breakpoint with t∆∞o conditions(min and max) */
@mixin new_bp($min-width, $max-width) {
  // Set global device param
  $media: only screen;
  // Media queries supported
  @if $mq-support == true {
    @media #{$media} and ('min-width': $min-width) and ('max-width': $max-width) {
      @content;
    }
  }
}
